# Configurações para ambiente LOCAL com PostgreSQL
# Para usar este perfil: mvn spring-boot:run "-Dspring-boot.run.jvmArguments=-Dspring.profiles.active=local"

# Configurações do servidor
server:
  port: ${SERVER_PORT:8080}
  servlet:
    context-path: /
    session:
      timeout: 60m  # 1 hora para desenvolvimento
    encoding:
      charset: UTF-8
      enabled: true
      force: true
  error:
    include-message: always
    include-binding-errors: always
  compression:
    enabled: true
    mime-types: text/html,text/xml,text/plain,text/css,application/javascript,application/json
    min-response-size: 1024

# Configurações do Spring
spring:
  devtools:
    restart:
      enabled: true
      additional-paths: src/main/java,src/main/resources/templates
      exclude: static/**,public/**
    livereload:
      enabled: true
      port: 35729
  
  datasource:
    url: jdbc:postgresql://localhost:5432/cca_db?useUnicode=true&characterEncoding=UTF-8
    username: cca_user
    password: cca_password
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 10
      minimum-idle: 2
      idle-timeout: 30000
      connection-timeout: 20000
      max-lifetime: 1200000
      auto-commit: true
      pool-name: CCA-PostgreSQL-Pool
  
  jpa:
    hibernate:
      ddl-auto: update  # Atualiza o schema automaticamente
    show-sql: true  # Mostra SQL no console para desenvolvimento
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        jdbc:
          lob:
            non_contextual_creation: true
            
  # Configuração do Flyway para ambiente de desenvolvimento com PostgreSQL
  flyway:
    enabled: true
    baseline-on-migrate: true
    baseline-version: 0
    locations: classpath:db/migration/postgres
    validate-on-migrate: false  # Temporariamente desativado para permitir a execução
    clean-disabled: false  # Permitir limpeza em desenvolvimento (apenas se necessário)
    clean-on-validation-error: true  # Limpa e recria se houver erro de validação
  
  mvc:
    log-resolved-exception: true
    format:
      date: yyyy-MM-dd
      time: HH:mm:ss
      date-time: yyyy-MM-dd'T'HH:mm:ss
    message-codes-resolver-format: POSTFIX_ERROR_CODE
  
  thymeleaf:
    cache: false  # Desabilita cache para desenvolvimento
    mode: HTML
    encoding: UTF-8
    servlet:
      content-type: text/html
    prefix: classpath:/templates/
  
  web:
    locale: pt_BR
    locale-resolver: fixed

# Configurações do Swagger/SpringDoc
springdoc:
  api-docs:
    enabled: true
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html
    enabled: true
    operations-sorter: method
    tags-sorter: alpha
  show-actuator: true

# Configurações específicas da aplicação
cca:
  security:
    jwt:
      secret: ${JWT_SECRET:9a4f2c8d3b7a1e6f45c8a0b3f267d8b1d4e6f3c8a9d2b5f8e3a9c8b5f6v8a9d3}
      expiration: 86400000  # 24 horas em milissegundos
    remember-me:
      key: ${REMEMBER_ME_KEY:caracore2025}
      token-validity: 2592000  # 30 dias em segundos
  
  email:
    enabled: true
    host: smtp.example.com
    port: 587
    username: ${EMAIL_USERNAME:test@example.com}
    password: ${EMAIL_PASSWORD:password}
    properties:
      mail.smtp.auth: true
      mail.smtp.starttls.enable: true
  
  recaptcha:
    enabled: false  # Desabilitar em desenvolvimento
    site-key: ${RECAPTCHA_SITE_KEY:6LeIxAcTAAAAAJcZVRqyHh71UMIEGNQ_MXjiZKhI}  # Chave de teste
    secret-key: ${RECAPTCHA_SECRET_KEY:6LeIxAcTAAAAAGG-vFI1TnRWxMZNFuojJ4WifJWe}  # Chave de teste

# Configurações de logging
logging:
  level:
    root: INFO
    com.caracore.cca: DEBUG
    org.springframework: INFO
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE  # Mostra valores dos parâmetros SQL
    org.springframework.security: INFO